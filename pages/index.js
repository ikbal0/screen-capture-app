import axios from 'axios';
import Head from 'next/head'

export default function Home() {

  const displayMediaOptions = {
    video: true,
    audio: true
  };
  
  async function startCapture() {
    if (document.getElementById("videoView").srcObject != null) return alert('already recorded')
    if (document.getElementById("videoView2").srcObject != null) return alert('0')
    try {
      const dataCam = []
      const data = []

      const myElement = document.getElementById("videoView");
      const myElement2 = document.getElementById("videoView2");
      try {
        const stream = myElement.srcObject = await navigator.mediaDevices.getDisplayMedia(displayMediaOptions)
        const stream2 = myElement2.srcObject = await navigator.mediaDevices.getUserMedia(displayMediaOptions)
        
        const mediaRecorder = new MediaRecorder(stream)
        const mediaRecorder2 = new MediaRecorder(stream2)

        mediaRecorder.ondataavailable = (e) => {
          data.push(e.data)
        }

        mediaRecorder2.ondataavailable = (e) => {
          dataCam.push(e.data)
        }

        mediaRecorder.start()
        mediaRecorder2.start()

        mediaRecorder.onstop = async (e) => {
          const file = new Blob(data, {
            type: 'video/mp4'
          })

          document.getElementById("videoView").src = URL.createObjectURL(
            file
          )

          const fileName = Date.now().toString() + "vid.mp4"

          const formData = new FormData()
          formData.append("file", file, fileName)

          const endpoint = '/api/upload'

          const options = {
          headers: {
              'Content-Type': 'multipart/form-data',
          },
          }

          const response = await axios.post(endpoint, formData, options)

          alert(`screen upload ${response.data.message}`)
        }

        mediaRecorder2.onstop = async (e) => {
          const file = new Blob(dataCam, {
            type: 'video/mp4'
          })

          document.getElementById("videoView2").src = URL.createObjectURL(
            file
          )

          const fileName = Date.now().toString() + "camVid.mp4"

          const formData = new FormData()
          formData.append("file", file, fileName)

          const endpoint = '/api/upload'

          const options = {
          headers: {
              'Content-Type': 'multipart/form-data',
          },
          }

          const response = await axios.post(endpoint, formData, options)

          alert(`cam upload ${response.data.message}`)
        }
      } catch (error) {
        console.error(error)
        alert('no')
      }
      
      } catch (error) {
        console.error(`Error: ${error}`)
      }
  }

  function stopCapture(evt) {
    try {
      let tracks = document.getElementById("videoView").srcObject.getTracks();
      let tracks2 = document.getElementById("videoView2").srcObject.getTracks();
    
      tracks.forEach((track) => track.stop());
      tracks2.forEach((track) => track.stop());
      document.getElementById("videoView").srcObject = null;
      document.getElementById("videoView2").srcObject = null;
    } catch (error) {
      alert('no')
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div className='text-center'>
        <h3>Record</h3>

        <div>
          <button onClick={() => startCapture()}>Start</button>
          <button onClick={() => stopCapture()}>stop</button>
          <video 
          id='videoView' 
          className="h-52 w-full" 
          autoPlay
          style={{
            'width': '500px',
            'display': 'none'
          }}/>

          <video 
          // add src here to check if file valid!
          // src='/uploads/1671529307895vid.mp4'
          id='videoView2' 
          autoPlay
          loop
          controls
          style={{
            'width': '500px',
            'display': 'none'
          }}/>
        </div>
        </div>
      </main>
    </>
  )
}
